name: API Call

on:
  schedule:
    - cron: '0 0 * * *'  # Ejecutar a medianoche UTC todos los días
  workflow_dispatch:  

jobs:
  api_calls:
    runs-on: ubuntu-latest

    steps:
      # Checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Llamada a la API de OpenWeather
      - name: Make API request (OpenWeather)
        run: |
          CITY="Madrid"  # Puedes cambiar esto por cualquier ciudad
          LANG="EN"
          API_URL="https://open-weather13.p.rapidapi.com/city/${CITY}/${LANG}"
          USER_TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          mkdir -p api_responses
          
          curl --silent --request GET "$API_URL" \
            --header 'x-rapidapi-host: open-weather13.p.rapidapi.com' \
            --header "x-rapidapi-key: ${{ secrets.OPENWEATHER_KEY }}" \
            -o "api_responses/weather_${CITY}_${USER_TIMESTAMP}.json"

      - name: Commit and push API response
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add api_responses/ || echo "No hay cambios en api_responses"
          git diff --cached --quiet || (git commit -m "Nueva llamada a OpenWeather - $USER_TIMESTAMP" && git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git main)

      # Enviar mensaje a Telegram
      - name: Send Telegram message
        run: |
          CITY="Madrid"  # Asegúrate de definir la ciudad aquí o pasarlo desde un paso anterior
          USER_TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          MESSAGE="API Request completed. New weather data for ${CITY} saved at ${USER_TIMESTAMP}"
          
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
               -d chat_id="${{ secrets.CHAT_ID }}" \
               -d text="$MESSAGE"